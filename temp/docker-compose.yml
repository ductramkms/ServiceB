version: "3.5"
services:
  # SERVICE B
  service_b_container:
    container_name: service_b_container
    image: ductram/service_b
    #    restart: always
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATA_MONGODB_HOST=mongodb_service
      - SPRING_KAFKA_HOST=kafka
      - SPRING_KAFKA_PORT=9092
      - SERVICE_A_HOST=172.22.1.2
      - SERVICE_B_HOST=172.22.1.3
      - ISSUER_URI=172.22.1.3
      - REDIRECT_HOST=127.0.0.1
      # env of opentelemetry
      - OTEL_SERVICE_NAME=service_b_container
      - OTEL_METRICS_EXPORTER=none
      - OTEL_TRACES_EXPORTER=jaeger
      - OTEL_EXPORTER_JAEGER_ENDPOINT=http://jaeger_service:14250
    depends_on:
      - mongodb_service
      - kafka
      - zookeeper
    networks:
      service_app_network:
        ipv4_address: 172.22.1.3

  # MONGODB
  mongodb_service:
    container_name: mongodb_service
    hostname: mongodb_service
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    networks:
      service_app_network:
        ipv4_address: 172.22.1.4

  # ZOOKEEPER
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      service_app_network:

  # KAFKA
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      service_app_network:

#NETWORK
networks:
  service_app_network:
    name: service_app_network
    ipam:
      driver: default
      config:
        - subnet: 172.22.0.0/16
